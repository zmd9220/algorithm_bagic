#include <iostream>

using namespace std;

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);

	int num1 = 10;
	void *ptr = &num1; // 보이드형 포인터는 어떤 자료형이든 넣을 수 있음 사용시에 (자료형*)형식으로 꺼내는데 받는 자료형이 포인터면 (자료형*) 그냥 값이면 *(자료형*)으로 역참조를 해야함
	int *ptr2 = &num1; // 포인터는 선언할 때만 * 쓰고 그후에 사용할땐 그냥 이름만 씀-> 혹시 그 메모리의 값을 불러오고자 할 때는 *을 해서 메모리의 역 값(즉 실제값)을 불러옴
	int *ptr3 = (int*)ptr; // 이게 포인터형일때 보이드형 값을 그대로 인트형 메모리 포인터로 가져온것
	int v = *ptr2; // 그냥 값을 받으려면 포인터형에 *을 붙여서 역참조를 시켜 값을 얻어야됨
	cout << v << '\n'; // 값이 나옴 10
	cout << *ptr2 << '\n'; // 포인터의 역참조 = 값이 반환 10
	cout << ptr2 << '\n'; // 메모리 주소가 나올 것(포인트형은 그냥 사용시 메모리 주소 반환 *포인터이름 해야 값이 나옴)

	int value = *(int*)ptr; // 이게 그냥 값을 받을때 *(자료형*)로 void 포인터 형을 int 자료형으로 바꾸고 그 메모리에 있는 값을 역참조 해오라는 뜻
	cout << value << '\n'; // 즉 10이 나올것임

}
