#include <iostream>

using namespace std;

long long d[31]; // 0으로 초기화한 배열 answer d[1]과 같이 애초에 불가능한 경우 0
int main()
{
	int n;
	cin >> n;
	d[0] = 1;

	// 기존의 도형 맞추기 처럼 3*2 도형이 최소 조건으로 1*2 3개깔거나 2*1 2개 1*2 1개 위 아래 위치 바꿔서 1회씩 총 3개의 경우가 기본 조건
	// 거기에 더하여 가운데 2*n개(짝수개) 1*2 넣고 세로로 양끝에 1*2 도형 1개씩, 그리고 1*2짜리 2*n개를 밑이나 위에 까는 2가지 경우의 형태로 조건을 만족시킬 수 있음
	// 정리하자면
	// d[i] = 3*d[i-2] + 2*d[i-4] + .... + 2*[i-j](i-j >= 0)
	for (int i = 2; i <= n; i+=2)
	{
		d[i] = d[i - 2] * 3;
		for (int j = i-4; j >= 0; j-=2)
		{
			d[i] += d[j] * 2;
		}
	}
	cout << d[n] << '\n';
	return 0;
}